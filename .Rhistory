setwd("~/Dropbox/ITAM_Dropbox/Métodos Analíticos/Examen_2_Git")
library(igraph)
edges <- read.csv("14mayo/network_edges_Prueba-Medios.csv", header = TRUE, sep = ",")
edges <- read.csv("./14mayo/network_edges_Prueba-Medios.csv", header = TRUE, sep = ",")
getwd()
edges <- read.csv("./Datos/14mayo/network_edges_Prueba-Medios.csv", header = TRUE, sep = ",")
nodes <- read.csv("./Datos/14mayo/network_nodes_Prueba-Medios.csv", header = TRUE, sep = ",", quote = "'")
grafo <- data.frame(edges[,1], edges[,2])
g <- graph.data.frame(grafo, directed=TRUE)
g_un <- graph.data.frame(grafo, directed=FALSE)
?simplify
g_un_s <- simplify(g_un)
comm <- fastgreedy.community(g_un_s, membership=TRUE, weights = edges$weight)
comm$membership
membership(comm)
sizes(comm)
communities(comm)
V(g)$comm_mod <- membership(comm)
library(rgexf)
nodes$X.id.
write.gexf(as.matrix(nodes$X.id., nodes$X.id.), as.matrix(edges$source, edges$target), nodesAtt = comm$membership)
as.matrix(edges$source, edges$target)
head(as.matrix(edges$source, edges$target))
write.gexf(data.frame(id=nodes$X.id., label=nodes$X.id.), data.frame(source=edges$source, target=edges$target), nodesAtt = data.frame(membership=comm$membership))
200/6
data.frame(source=edges$source, target=edges$target)
data.frame(id=nodes$X.id., label=nodes$X.id.)
output <- write.graph(g, file='grafo.gml', format = 'gml')
print(output, filepath, replace=T)
print(output, './grafo.gexf', replace=T)
V(g)$comm_mod <- membership(comm)
V(g)
head(V(g))
V(g)$comm_mod <- membership(comm)
head(V(g))
V(g)
V(g)$comm_mod
?write.graph
239/6
write.graph(g, file = './grafo2.graphml', format='graphml')
dim(edges)
length(V(g))
length(E(g))
getwd()
library(igraph)
edges <- read.csv("./Datos/14mayo/network_edges_Prueba-Medios.csv", header = TRUE, sep = ",")
nodes <- read.csv("./Datos/14mayo/network_nodes_Prueba-Medios.csv", header = TRUE, sep = ",", quote = "'")
grafo <- data.frame(edges[,1], edges[,2])
g <- graph.data.frame(grafo, directed=TRUE)
betweennessG <- betweenness(g)
indegreeG <- degree(g, mode="in")
outdegreeG <- degree(g, mode="out")
totaldegreeG <- degree(g)
inclosenessG <- closeness(g, mode='in', weight = edges$weight)
outclosenessG <- closeness(g, mode='out')
totalclosenessG <- closeness(g)
res <- data.frame(nodes$X.id, betweennessG, indegreeG, outdegreeG, totaldegreeG, inclosenessG,outclosenessG, totalclosenessG)
red
res
head(res)
res <- data.frame(id = nodes$X.id, betweennessG, indegreeG, outdegreeG, totaldegreeG, inclosenessG,outclosenessG, totalclosenessG)
g_un <- graph.data.frame(grafo, directed=FALSE)
g_un_s <- simplify(g_un)
comm <- fastgreedy.community(g_un_s, membership=TRUE, weights = edges$weight)
res2 <- data.frame(res, com_mod=comm$membership)
head(res2)
write.table(res2,file="nodosGraph2.csv",sep=",", colNames=F, rowNames=F)
?write.table
write.table(res2,file="nodosGraph2.csv",sep=",", col.names=F, row.names=F)
write.table(res2,file="nodosGraph2.csv",sep=",", row.names=F)
head(indegreeG)
sort(head(indegreeG))
head(sort(indegreeG))
tail(sort(indegreeG))
g <- simplify(g)
indegreeG <- degree(g, mode="in")
tail(sort(indegreeG))
betweennessG <- betweenness(g)
indegreeG <- degree(g, mode="in")
outdegreeG <- degree(g, mode="out")
totaldegreeG <- degree(g)
inclosenessG <- closeness(g, mode='in', weight = edges$weight)
outclosenessG <- closeness(g, mode='out')
totalclosenessG <- closeness(g)
res <- data.frame(id = nodes$X.id, betweennessG, indegreeG, outdegreeG, totaldegreeG, inclosenessG,outclosenessG, totalclosenessG)
library(dplyr)
arrange(res, desc(indegreeG)) %>% head
head(betweennessG)
head(nodes$X.id.)
E(g)
head(V(g))
res <- data.frame(id = V(g), betweennessG, indegreeG, outdegreeG, totaldegreeG, inclosenessG,outclosenessG, totalclosenessG)
as.character(V(g))
as.matrix(V(g))
as.data.frame(V(g))
V(g)
class(V(g))
names(class(V(g)))
names(V(g))
as.vector(V(g))
V(g)$name
res <- data.frame(id = V(g)$name, betweennessG, indegreeG, outdegreeG, totaldegreeG, inclosenessG,outclosenessG, totalclosenessG)
arrange(res, desc(indegreeG)) %>% head
library(dplyr)
library(xtables)
library(xtable)
xtable(arrange(res, desc(indegreeG)) %>% head)
head(comm$membership)
head(V(g_un_s)$name)
head(V(g)$name)
sum(V(g)$name ==V(g_un_s)$name)
sum(V(g)$name == res$id
)
res2 <- data.frame(res, com_mod=comm$membership)
write.table(res2,file="nodosGraph2.csv",sep=",", row.names=F)
arrange(res, desc(outdegreeG)) %>% head
?fastgreedy.community
arrange(nodes, desc(X.followers.))
arrange(nodes, desc(X.followers.)) %>% head(20)
arrange(nodes, desc(as.integer(X.followers.))) %>% head(20)
nodes2 <- nodes
nodes2$X.followers. <- as.integer(nodes2$X.followers.)
arrange(nodes2, desc(X.followers.)) %>% head(20)
arrange(nodes2, desc(X.followers.)) %>% tail(20)
nodes2 <- nodes
nodes2$X.followers. <- as.numeric(nodes2$X.followers.)
arrange(nodes2, desc(X.followers.)) %>% head(20)
nodes2$X.friends. <- as.numeric(nodes2$X.friends.)
arrange(nodes2, desc(X.friends.)) %>% head(20)
nodes2 <- nodes <- read.csv("./Datos/14mayo/network_nodes_Prueba-Medios.csv", header = TRUE, sep = ",", quote = "'", colClasses=c('character', 'numeric', 'numeric'))
nodes2 <- nodes
?gsub
gsub("\"([0-9]+)\"", "\1", nodes2$X.followers.)
head(nodes)
nodes2 <- nodes
nodes2$X.followers. <- as.numeric(nodes2$X.followers.)
nodes2$X.friends. <- as.numeric(nodes2$X.friends.)
head(nodes2)
as.name(nodes$X.followers.)
as.symbol(nodes$X.followers.)
noquote(nodes$X.followers.)
as.numeric(noquote(nodes$X.followers.))
head(as.numeric(noquote(nodes$X.followers.)))
head(nodes$X.followers.)
nodes2 <- nodes
foll<- gsub("\"", "", nodes2$X.followers.)
head(foll)
head(as.numeric(foll))
nodes2 <- nodes
foll<- gsub("\"", "", nodes2$X.followers.)
friends <- gsub("\"", "", nodes2$X.friends.)
nodes2 <- nodes
nodes2$foll<- gsub("\"", "", nodes2$X.followers.)
nodes2$friends <- gsub("\"", "", nodes2$X.friends.)
arrange(nodes2, desc(foll)) %>% head(20)
nodes2$foll<- as.numeric(gsub("\"", "", nodes2$X.followers.))
nodes2$friends <- as.numeric(gsub("\"", "", nodes2$X.friends.))
arrange(nodes2, desc(foll)) %>% head(20)
nodes2$X.followers. <- NULL
nodes2$X.friends. <- NULL
arrange(nodes2, desc(foll)) %>% head(20)
nodes2$id <- gsub("\"", "", nodes2$X.id.)
nodes2$X.id. <- NULL
arrange(nodes2, desc(foll)) %>% head(20)
nodes2 <- nodes
nodes2$id <- gsub("\"", "", nodes2$X.id.)
nodes2$foll<- as.numeric(gsub("\"", "", nodes2$X.followers.))
nodes2$friends <- as.numeric(gsub("\"", "", nodes2$X.friends.))
nodes2$X.id. <- NULL
nodes2$X.followers. <- NULL
nodes2$X.friends. <- NULL
arrange(nodes2, desc(foll)) %>% head(20)
xtable(arrange(nodes2, desc(foll)) %>% head(8))
?knit
library(knitr)
?knit
knit('twitterRes.Rmd', 'twitterRes.R', tangle=TRUE)
