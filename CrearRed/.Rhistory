sim <- simplex(a,A2=A2 , b2=t(b2))
sim <- simplex(t(a), A2=A2 , b2=b2)
sim <- simplex(a, A2=A2 , b2=b2)
sim <- simplex(a, A2=t(A2) , b2=b2)
plot(0.75*xa+0.25*xb-36, type='l')
abline(a=0, b=0)
abline(a=0, b=100)
lines(0.25*xa+0.25*xb-24)
lines(0.5*xa+1.5*xb-72)
lines(xa-24*7)
lines(xb-24*7)
24*7
plot(0.75*xa+0.25*xb-36, type='l')
lines(xa-24*7)
xa<-seq(0,1000,l=1000)
xb<-seq(0,1000,l=1000)
plot(0.75*xa+0.25*xb-36, type='l')
abline(a=0, b=0)
abline(a=0, b=100)
lines(0.25*xa+0.25*xb-24)
lines(0.5*xa+1.5*xb-72)
lines(xa-24*7)
lines(xb-24*7)
plot(xa+xb)
plot(0.75*xa+0.25*xb-36, type='l')
abline(a=0, b=0)
abline(a=0, b=100)
lines(0.25*xa+0.25*xb-24)
lines(0.5*xa+1.5*xb-72)
24*50+72*40
24+36+72
168/7
24*7
plot(0.75*xa+0.25*xb-36, type='l')
abline(a=0, b=0)
abline(a=0, b=100)
lines(0.25*xa+0.25*xb-24)
lines(0.5*xa+1.5*xb-72)
lines(xa+xb-24*7)
24*.75+72*.25
.25*24+.25*72
.5*24+1.5*72
plot(xa+x2-168)
plot(xa+xb-168)
library(Rcpp)
?adist
install.packages("raster")
library(sp)
library(rgdal)
library(tiff)
library(raster)
setwd('home/mbc/Dropbox/ITAM_Dropbox/Métodos Numéricos y Optimización/Workshop 2 (Imágenes satelitales)/Tarea 2')
setwd('home/mbc/Dropbox/ITAM_Dropbox/Métodos Numéricos y Optimización/Workshop 2 (Imágenes satelitales)')
getwd()
setwd('home/mbc/Dropbox/ITAM_Dropbox/Métodos Numéricos y Optimización')
c<-[-18,     2,    -4,    -4,     8,    16,     2,    12,   -19,     4]
c <- [-18,     2,    -4,    -4,     8,    16,     2,    12,   -19,     4]
a<-[1,2]
c <- c(-18,     2,    -4,    -4,     8,    16,     2,    12,   -19,     4)
b<-c(6,3)
A<-matrix(c(1,-8, 1,31, -10, 6,21,-3,-5,-9, 3,16, 8, 0,  -18,-8,  -16, 4,-6,-4), ncol=10, nrow=2)
simplex(c, A1=A, b1=b)
library(boot)
simplex(c, A1=A, b1=b)
library(raster)
pr <- function(x1,y1){
x<-character(x1)
y<-character(y1)
}
a<-pr(g,k)
character(d)
character('d')
as.character('d')
as.character(g)
?switch
pr <- function(x,y){
switch('D'=0.2, 'P'=0.3)
}
pr('D')
pr <- function(x,y){
switch(x,'D'=0.2, 'P'=0.3)
}
pr('D','O')
pr <- function(x,y){
switch(x, y,
'D'=0.2, 'P'=0.3)
}
pr('D','O')
pr('D','P')
pr <- function(x,y){
switch(c(x, y),
c('D','P')=0.2, 'P'=0.3)
}
pr <- function(x,y){
switch(c(x, y),
c('D','P')=0.2, 'P'=0.3)
}
pr <- function(x,y){
w=c(x,y)
switch(w,
'D'=0.2, 'P'=0.3)
}
pr('D','P')
pr <- function(x,y){
if(x='D' & y='N') 0.2
else if (x='N' & y='D') 0.3
else 0
}
pr <- function(x,y){
if(x='D' & y='N') return 0.2
else if (x='N' & y='D') return 0.3
else return 0
}
pr <- function(x,y){
if(x=='D' & y=='N') 0.2
else if (x=='N' & y=='D') 0.3
else 0
}
pr('D','N')
pr <- function(x,y){
if(x=='D' & y=='S') 1
else if (x=='N' & y=='D') 6/7
else if (x=='V' & y=='N') 5/9
else if (x=='A' & y=='V') 2/5
else if (x=='N' & y=='N') 1/9
else if (x=='N' & y=='V') 1/5
else if (x=='P' & y=='V') 2/5
else if (x=='D' & y=='P') 1
else if (x=='A' & y=='D') 1/7
else if (x=='N' & y=='A') 1/3
else if (x=='stop' & y=='N') 3/9
else if (x=='stop' & y=='A') 2/3
else 0
}
pr('A','V')
pr('N', 'D')*pr('V', 'N')*pr('P','V')*pr('D','P')*pr('A','D')*pr('N','A')
pr('V', 'N', 'D')*pr('P', 'V', 'N')*pr('D', 'P', 'V')*pr('A', 'D', 'P')*pr('N', 'A', 'D')
pr <- function(x,y,z){
if(x=='N' & y=='D' & z=='S') 4/5
else if (x=='V' & y=='N' & z=='D') 3/6
else if (x=='A' & y=='V' & z=='N') 2/5
else if (x=='A' & y=='D' & z=='S') 1/5
else if (x=='stop' & y=='A' & z=='V') 1
else if (x=='N' & y=='N' & z=='D') 1/6
else if (x=='V' & y=='N' & z=='N') 1
else if (x=='N' & y=='A' & z=='D') 1
else if (x=='N' & y=='V' & z=='N') 1/5
else if (x=='stop' & y=='N' & z=='V') 1/5
else if (x=='P' & y=='V' & z=='N') 2/5
else if (x=='V' & y=='N' & z=='A') 1
else if (x=='D' & y=='P' & z=='V') 1
else if (x=='N' & y=='D' & z=='P') 1
else if (x=='stop' & y=='N' & z=='D') 2/6
}
pr('V', 'N', 'D')*pr('P', 'V', 'N')*pr('D', 'P', 'V')*pr('A', 'D', 'P')*pr('N', 'A', 'D')
pr('V', 'N', 'D')
pr('P', 'V', 'N')
pr('D', 'P', 'V')
pr('V', 'N', 'D')*pr('P', 'V', 'N')*pr('D', 'P', 'V')*pr('A', 'D', 'P')
pr('A', 'D', 'P')
pr <- function(x,y,z){
if(x=='N' & y=='D' & z=='S') 4/5
else if (x=='V' & y=='N' & z=='D') 3/6
else if (x=='A' & y=='V' & z=='N') 2/5
else if (x=='A' & y=='D' & z=='S') 1/5
else if (x=='stop' & y=='A' & z=='V') 1
else if (x=='N' & y=='N' & z=='D') 1/6
else if (x=='V' & y=='N' & z=='N') 1
else if (x=='N' & y=='A' & z=='D') 1
else if (x=='N' & y=='V' & z=='N') 1/5
else if (x=='stop' & y=='N' & z=='V') 1/5
else if (x=='P' & y=='V' & z=='N') 2/5
else if (x=='V' & y=='N' & z=='A') 1
else if (x=='D' & y=='P' & z=='V') 1
else if (x=='N' & y=='D' & z=='P') 1
else if (x=='stop' & y=='N' & z=='D') 2/6
else 0
}
pr('V', 'N', 'D')*pr('P', 'V', 'N')*pr('D', 'P', 'V')*pr('A', 'D', 'P')*pr('N', 'A', 'D')
list.of.packages <- c("twitteR", "parallel", "methods")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, require, character.only=T)
nc=getOption("mc.cores", 2L)
setup_twitter_oauth('GPI5CNx6tabl6J1M24lQJmCkU', 'YxmKTz1t4uLWSQDKu1h3p0l1g6zSf6PWLPVaAn1ppao23a8ZDY', '86753315-rldhPYu5C17xEzoVMADKNyefqgw1teg0VduH14TVi','Db9volDQ7i0VEjJ85hMHqTQ9nIL1o2w37OJkjAcG1khHz')
users_c <- read.csv('users_prueba.csv', colClasses = c('factor', 'character'))
setwd("~/Dropbox/ITAM_Dropbox/Métodos Analíticos/Examen_2_Git/CrearRed")
users_c <- read.csv('users_prueba.csv', colClasses = c('factor', 'character'))
users_seed <- users_c[1:2,]
followers1 <- mclapply(users_seed$id, function(i) {getUser(i)$getFollowerIDs()}, mc.cores=nc)
followers1
tryCatch(getUser('mario_becerra')$getFollowerIDs(), error=function(e) e, warning=function(w) w)
testit <- function() warning("testit") # function that generates warning.
assign("last.warning", NULL, envir = baseenv()) # clear the previous warning
testit() # run it
if(length(warnings())>0){ # or !is.null(warnings())
print("something happened")
}
followers1
followers1 <- tryCatch(mclapply(users_seed$id,
function(i) {getUser(i)$getFollowerIDs()}, mc.cores=nc), error=function(e) e, warning=function(w) w)
followers1
followers1()
tryCatch(mclapply(users_seed$id,
function(i) {getUser(i)$getFollowerIDs()}, mc.cores=nc), error=function(e) e, warning=function(w) w)
names(followers1) <- users_seed$id
followees1 <- mclapply(users_seed$id, function(i) {getUser(i)$getFriendIDs()}, mc.cores=nc)
names(followees1) <- users_seed$id
temp <- unique(c(unlist(followees1), unlist(followers1))) #followers y sollowees únicos
new_ids <- setdiff(temp, users_seed$id) #todos los usuarios distintos de los usuarios semilla
new_ids <- new_ids[1:2]
followers <- followers1 #lista donde se van a guardar todos los followers
followees <- followees1 #lista donde se van a guardar todos los followees
k=0
while(k<3) {
k=k+1
print(k)
followers2 <- mclapply(new_ids, function(i) {getUser(i)$getFollowerIDs()}, mc.cores=nc)
names(followers2) <- new_ids
followees2 <- mclapply(new_ids, function(i) {getUser(i)$getFriendIDs()}, mc.cores=nc)
names(followees2) <- new_ids
followers <- append(followers, followers2)
followees <- append(followees, followees2)
temp <- unique(c(unlist(followees), unlist(followers)))
new_ids <- setdiff(temp, users_seed$id)
new_ids <- new_ids[1:2]
}
followers
length(followers)
length(followees)
length(unlist(followees))
length(unlist(followers))
write.csv(followers, file='followers.csv')
write.csv(unlist(followers), file='followers.csv')
unlist(followers)
names(followers)
i
i="273375532"
i
str(i)
class(news_ids)
class(new_ids)
class(new_ids[[1]])
k=0
while(k<3) {
k=k+1
print(k)
followers2 <- mclapply(new_ids, function(i) {
f <- getUser(i)$getFollowerIDs()
write.csv(f, file=paste0(i,'../Out/followers.csv'))},
mc.cores=nc)
names(followers2) <- new_ids
#followees2 <- mclapply(new_ids, function(i) {getUser(i)$getFriendIDs()}, mc.cores=nc)
followees2 <- mclapply(new_ids, function(i) {
f <- getUser(i)$getFriendIDs()
write.csv(f, file=paste0(i,'../Out/followees.csv'))},
mc.cores=nc)
names(followees2) <- new_ids
followers <- append(followers, followers2)
followees <- append(followees, followees2)
temp <- unique(c(unlist(followees), unlist(followers)))
new_ids <- setdiff(temp, users_seed$id)
new_ids <- new_ids[1:2]
}
k=0
while(k<3) {
k=k+1
print(k)
followers2 <- mclapply(new_ids, function(i) {
f <- getUser(i)$getFollowerIDs()
write.csv(f, file=paste0(i,'../Out/followers.csv'))},
mc.cores=nc)
names(followers2) <- new_ids
#followees2 <- mclapply(new_ids, function(i) {getUser(i)$getFriendIDs()}, mc.cores=nc)
followees2 <- mclapply(new_ids, function(i) {
f <- getUser(i)$getFriendIDs()
write.csv(f, file=paste0(i,'../Out/followees.csv'))},
mc.cores=nc)
names(followees2) <- new_ids
followers <- append(followers, followers2)
followees <- append(followees, followees2)
temp <- unique(c(unlist(followees), unlist(followers)))
new_ids <- setdiff(temp, users_seed$id)
new_ids <- new_ids[1:2]
}
followers2 <- mclapply(new_ids, function(i) {
f <- getUser(i)$getFollowerIDs()
write.csv(f, file=paste0(i,'../Out/followers.csv'))},
mc.cores=nc)
f <- getUser(i)$getFollowerIDs()
f
list.of.packages <- c("twitteR", "parallel", "methods")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, require, character.only=T)
nc=getOption("mc.cores", 2L)
setup_twitter_oauth('GPI5CNx6tabl6J1M24lQJmCkU', 'YxmKTz1t4uLWSQDKu1h3p0l1g6zSf6PWLPVaAn1ppao23a8ZDY', '86753315-rldhPYu5C17xEzoVMADKNyefqgw1teg0VduH14TVi','Db9volDQ7i0VEjJ85hMHqTQ9nIL1o2w37OJkjAcG1khHz')
f <- getUser(i)$getFollowerIDs()
i
getUser(i)
f <- getUser(i)$getFollowerIDs()
getUser(i)
g<-getUser(i)
g$getFollowerIDs
g$getFollowerIDs()
followers[[1]]
followers[[2]]
followers2[[2]]
g$getFollowerIDs()
i
write.csv(users_c, file=paste0(i,'../Out/followers.csv'))
write.csv(users_c, file=paste0('../Out/', paste0(i,'followers.csv')))
f<-users_c
write.table(f, file=paste0('../Out/', paste0(i,'followers.csv')), row.names=FALSE)},
write.table(f, file=paste0('../Out/', paste0(i,'followers.csv')), row.names=FALSE)
write.table(f, file=paste0('../Out/', paste(i,'followers.csv')), row.names=FALSE)},
write.table(f, file=paste0('../Out/', paste(i,'followers.csv')), row.names=FALSE)
write.table(f, file=paste('../Out/followers', paste0(i,'.csv')), row.names=FALSE)
write.table(f, file=paste0('../Out/', paste(i,'followers.csv')), row.names=FALSE)
followers5<-list()
append(followers5, followers2)
new_ids
new_ids <- list(users_seed)
new_ids
sapply(new_ids, function(i) getUser(i))
new_ids
split(users_seed)
?split
split(users_seed, factor(users$id))
split(users_seed, factor(users_seed$id))
split(users_seed$id, factor(users_seed$id))
new_ids <- setdiff(temp, users_seed$id)
new_ids
split(users_seed$id, factor(users_seed$id))
new_ids <- split(users_seed$id, factor(users_seed$id))
new_ids <- new_ids[1:2]
new_ids
followers <- list() #lista donde se van a guardar todos los followers
followees <- list() #lista donde se van a guardar todos los followees
k=0
while(k<3) {
k=k+1
print(k)
followers2 <- mclapply(new_ids, function(i) {
f <- getUser(i)$getFollowerIDs()
write.table(f, file=paste0('../Out/', paste(i,'followers.csv')), row.names=FALSE)},
mc.cores=nc)
names(followers2) <- new_ids
#followees2 <- mclapply(new_ids, function(i) {getUser(i)$getFriendIDs()}, mc.cores=nc)
followees2 <- mclapply(new_ids, function(i) {
f <- getUser(i)$getFriendIDs()
write.table(f, file=paste0('../Out/', paste(i,'followees.csv')), row.names=FALSE)},
mc.cores=nc)
names(followees2) <- new_ids
followers <- append(followers, followers2)
followees <- append(followees, followees2)
temp <- unique(c(unlist(followees), unlist(followers)))
new_ids <- setdiff(temp, users_seed$id)
new_ids <- new_ids[1:2]
}
f
i
f <- getUser(i)$getFriendIDs()
write.table(f, file=paste0('../Out/', paste(i,'followees.csv')), row.names=FALSE, col.names=FALSE)},
write.table(f, file=paste0('../Out/', paste(i,'followees.csv')), row.names=FALSE, col.names=FALSE)
followers
followees
followers2 <- mclapply(new_ids, function(i) {
f <- getUser(i)$getFollowerIDs()
write.table(f, file=paste0('../Out/', paste(i,'followers.csv')), row.names=FALSE, col.names=FALSE)},
mc.cores=nc)
followers2
new_ids[[1]]
new_ids <- split(users_seed$id, factor(users_seed$id))
new_ids[[1]]
followers2 <- mclapply(new_ids, function(i) {
f <- getUser(i)$getFollowerIDs()
write.table(f, file=paste0('../Out/', paste(i,'followers.csv')), row.names=FALSE, col.names=FALSE)},
mc.cores=nc)
names(followers
2) <- new_ids
names(followers2) <- new_ids
followers2
followers2 <- mclapply(new_ids, function(i) {
f <- getUser(i)$getFollowerIDs()
write.table(f, file=paste0('../Out/', paste(i,'followers.csv')), row.names=FALSE, col.names=FALSE)},
mc.cores=nc)
followers2
new_ids
i<-new_ids[[1]]
f <- getUser(i)$getFollowerIDs()
f
write.table(f, file=paste0('../Out/', paste(i,'followers.csv')), row.names=FALSE, col.names=FALSE)
followers2 <- mclapply(new_ids, function(i) {
f <- getUser(i)$getFollowerIDs()
write.table(f, file=paste0('../Out/', paste(i,'followers.csv')), row.names=FALSE, col.names=FALSE)},
mc.cores=nc)
followers2
new_ids
followees2 <- mclapply(new_ids, function(i) {
f <- getUser(i)$getFriendIDs()
write.table(f, file=paste0('../Out/', paste(i,'followees.csv')), row.names=FALSE, col.names=FALSE)},
mc.cores=nc)
followees2
lapply(new_ids[1], function(i) getUser(i))
lapply(new_ids[1], function(i) getUser(i)$getFriendIDs)
lapply(new_ids[1], function(i) getUser(i)$getFriendIDs())
followees2 <- mclapply(new_ids, function(i) {
f <- getUser(i)$getFriendIDs()
write.table(f, file=paste0('../Out/', paste(i,'followees.csv')), row.names=FALSE, col.names=FALSE)},
mc.cores=nc)
followees2
lapply(new_ids, function(i) getUser(i)$getFriendIDs())
lapply(1:length(new_ids), function(i) getUser(new_ids[[i]])$getFriendIDs())
i
i=1
new_ids[[i]]
lapply(1:2, function(i) getUser(new_ids[[i]])$getFriendIDs())
lapply(new_ids, function(i) getUser(i)$getFriendIDs())
users <- users_c[3:4,]
users_c <- users[3:4,]
users_c
users <- read.csv('users_prueba.csv', colClasses = c('factor', 'character'))
users_c <- users[3:4,]
users_c
new_ids <- split(users_c$id, factor(users_c$id))
new_ids
l
followers <- list() #lista donde se van a guardar todos los followers
followees <- list() #lista donde se van a guardar todos los followees
users <- read.csv('users_prueba.csv', colClasses = c('factor', 'character'))
users <- users[3:4,]
new_ids <- split(users$id, factor(users$id))
users <- users[3:4,]
ids <- split(users$id, factor(users$id))
followers <- list() #lista donde se van a guardar todos los followers
followees <- list() #lista donde se van a guardar todos los followees
k=0
while(k<3) {
k=k+1
print(k)
followers2 <- mclapply(ids, function(i) {
f <- getUser(i)$getFollowerIDs()
write.table(f, file=paste0('../Out/', paste(i,'followers.csv')), row.names=FALSE, col.names=FALSE)},
mc.cores=nc)
names(followers2) <- ids
#followees2 <- mclapply(ids, function(i) {getUser(i)$getFriendIDs()}, mc.cores=nc)
followees2 <- mclapply(ids, function(i) {
f <- getUser(i)$getFriendIDs()
write.table(f, file=paste0('../Out/', paste(i,'followees.csv')), row.names=FALSE, col.names=FALSE)},
mc.cores=nc)
names(followees2) <- ids
followers <- append(followers, followers2)
followees <- append(followees, followees2)
temp <- unique(c(unlist(followees), unlist(followers)))
ids <- setdiff(temp, users_seed$id)
ids <- ids[1:2]
}
nc=getOption("mc.cores", 2L)
while(k<3) {
k=k+1
print(k)
followers2 <- mclapply(ids, function(i) {
f <- getUser(i)$getFollowerIDs()
write.table(f, file=paste0('../Out/', paste(i,'followers.csv')), row.names=FALSE, col.names=FALSE)},
mc.cores=nc)
names(followers2) <- ids
#followees2 <- mclapply(ids, function(i) {getUser(i)$getFriendIDs()}, mc.cores=nc)
followees2 <- mclapply(ids, function(i) {
f <- getUser(i)$getFriendIDs()
write.table(f, file=paste0('../Out/', paste(i,'followees.csv')), row.names=FALSE, col.names=FALSE)},
mc.cores=nc)
names(followees2) <- ids
followers <- append(followers, followers2)
followees <- append(followees, followees2)
temp <- unique(c(unlist(followees), unlist(followers)))
ids <- setdiff(temp, users_seed$id)
ids <- ids[1:2]
}
news_id
ids
users <- users[3:4,]
ids <- split(users$id, factor(users$id))
ids
users <- read.csv('users_prueba.csv', colClasses = c('factor', 'character'))
users <- users[3:4,]
ids <- split(users$id, factor(users$id))
ids
setdiff(temp, ids)
setdiff(ids, "157545531")
while(k<3) {
k=k+1
print(k)
followers2 <- mclapply(ids, function(i) {
f <- getUser(i)$getFollowerIDs()
write.table(f, file=paste0('../Out/', paste(i,'followers.csv')), row.names=FALSE, col.names=FALSE)},
mc.cores=nc)
names(followers2) <- ids
#followees2 <- mclapply(ids, function(i) {getUser(i)$getFriendIDs()}, mc.cores=nc)
followees2 <- mclapply(ids, function(i) {
f <- getUser(i)$getFriendIDs()
write.table(f, file=paste0('../Out/', paste(i,'followees.csv')), row.names=FALSE, col.names=FALSE)},
mc.cores=nc)
names(followees2) <- ids
followers <- append(followers, followers2)
followees <- append(followees, followees2)
temp <- unique(c(unlist(followees), unlist(followers)))
ids <- setdiff(temp, ids)
ids <- ids[1:2]
}
followers
followers2
