ggplot(rayos_mensual.2, aes(x=yr, y=Número, fill=factor(estac))) + xlab('Año') + ylab('Número de incendios') + geom_bar(stat='identity') + guides(fill=guide_legend('Estación'))
rayos_mensual.2 <- rayos.2 %>% group_by(yr, estac) %>% summarise(Número=n())
head(rayos.2)
class(rayos.2$slope)
max(rayos.2$slope)
min(rayos.2$slope)
ggplot(intensu<-intens(uu[,1],uu[,2])
runif1000<-rep(0,length(intensu))
for(i in 1:length(intensu)) {
runif1000[i]<-runif(1,0,max(intensu))<intensu[i]
}
uuthin<-uu[runif1000==1,]
plot(poly2, type='l')
points(uuthin)
red<-expand.grid(x=seq(0,1,length=30),y=seq(0,1,length=30))
intensidad<-intens(red$x,red$y)
image(matrix(intensidad,30,30))
lines(poly2, type='l')
points(uuthin))
intensu<-intens(uu[,1],uu[,2])
runif1000<-rep(0,length(intensu))
for(i in 1:length(intensu)) {
runif1000[i]<-runif(1,0,max(intensu))<intensu[i]
}
uuthin<-uu[runif1000==1,]
plot(poly2, type='l')
points(uuthin)
red<-expand.grid(x=seq(0,1,length=30),y=seq(0,1,length=30))
intensidad<-intens(red$x,red$y)
image(matrix(intensidad,30,30))
lines(poly2, type='l')
points(uuthin)
load('poly2.Rdata')
uu<-csr(poly2,1000)
plot(uu)
lines(poly2)
intens<-function(x,y)
{
a<-x+2.25*x^2+y+3.78*y^2
return(a)}
intensu<-intens(uu[,1],uu[,2])
runif1000<-rep(0,length(intensu))
for(i in 1:length(intensu)) {
runif1000[i]<-runif(1,0,max(intensu))<intensu[i]
}
uuthin<-uu[runif1000==1,]
plot(poly2, type='l')
points(uuthin)
red<-expand.grid(x=seq(0,1,length=30),y=seq(0,1,length=30))
intensidad<-intens(red$x,red$y)
intensidad
image(matrix(intensidad,30,30))
lines(poly2, type='l')
points(uuthin)
distseq<-seq(0,1.005,length=30)
ghat<-rep(0,30)
ghat<-ghat/length(a)
plot(distseq,ghat,type="l")
plot(khat(uuthin,poly2,distseq), type='l')
plot(distseq,sqrt(khat(uuthin,poly2,distseq)/pi)-distseq,type="l")
abline(h=0,col=2)
kmatr<-matrix(0,nrow=30,ncol=100)
for(i in 1:100){
uusim<-csr(poly2,nrow(uuthin))
ksomb<-khat(uusim,poly2,distseq)
kmatr[,i]<-ksomb
}
korder<-sort(ksomb)
korder
head(rayos.2)
hist(rayos$aspect)
plot(rayos$aspect, rayos$size)
plot(rayos$aspect, log(rayos$size))
plot(rayos$elev, log(rayos$size))
rayos.2$elev_cat <- cut(rayos.2$elev, quantile(rayos.2$elev, probs=(0:6)/6))
head(rayos.2$elev_cat)
hist(rayos.2$elev_cat)
table(rayos.2$elev_cat)
?cut
quantile(rayos.2$elev, probs=(0:6)/6)
rayos.2$elev_cat2 <- cut(rayos.2$elev, breaks=6)
head(rayos.2$elev_cat2,30)
head(rayos.2)
table(rayos.2$elev_cat2)
rayos.2$aspect_cat <- cut(rayos.2$aspect, breaks=6)
head(rayos.2)
min(rayos$aspect)
table(rayos$aspect)
levels(rayos$aspect)
levels(rayos$aspect_cat)
levels(rayos.2$aspect_cat)
table(rayos.2$aspect_cat)
levels(rayos$veg9)
levels(factor(rayos$veg9))
rayos.2$size_cat <- cut(rayos.2$size, breaks=10)
table(rayos.2$size_cat)
rayos.2$size_cat <- cut(rayos.2$size, breaks=5)
table(rayos.2$size_cat)
rayos.2$size_cat <- cut(rayos.2$size, breaks=3)
table(rayos.2$size_cat)
head(rayos.2)
rayos.2$elev_cat <- cut(rayos.2$elev, breaks=6)
rayos.2 <- rayos %>% mutate(estac=ifelse(paste0(mo2,day2)<'0621' & paste0(mo2,day2)>='0321', 'Primavera',
ifelse(paste0(mo2,day2)<'0921' & paste0(mo2,day2)>='0621', 'Verano',
ifelse(paste0(mo2,day2)<'1221' & paste0(mo2,day2)>='0921', 'Otoño', 'Invierno'))))
rayos.2$elev_cat <- cut(rayos.2$elev, breaks=6)
rayos.2$aspect_cat <- cut(rayos.2$aspect, breaks=6)
head(rayos.2)
rayos_veg_elev <- rayos.2 %>% group_by(elev_cat, veg9) %>% summarise(Número=n())
head(rayos_veg_elev)
ggplot(rayos_veg_elev, aes(x=elev_cat, y=Número, fill=factor(veg9))) + xlab('Elevación') + ylab('Número de incendios') + geom_bar(stat='identity') + guides(fill=guide_legend('hj'))
ggplot(rayos_veg_elev, aes(x=elev_cat, y=Número, fill=factor(veg9))) + xlab('Elevación') + ylab('Número de incendios') + geom_bar(stat='identity') + guides(fill=guide_legend('hj')) + opts(axis.text.x=theme_text(angle=-90))
ggplot(rayos_veg_elev, aes(x=elev_cat, y=Número, fill=factor(veg9))) + xlab('Elevación') + ylab('Número de incendios') + geom_bar(stat='identity') + guides(fill=guide_legend('hj')) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(rayos_veg_elev, aes(x=elev_cat, y=Número)) + xlab('Elevación') + ylab('Número de incendios') + geom_bar(stat='identity') + guides(fill=guide_legend('hj')) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(rayos_veg_elev, aes(x=factor(veg9), y=Número)) + xlab('Elevación') + ylab('Número de incendios') + geom_bar(stat='identity') + guides(fill=guide_legend('hj')) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(rayos_veg_elev, aes(x=elev_cat, y=Número)) + xlab('Elevación') + ylab('Número de incendios') + geom_bar(stat='identity') + guides(fill=guide_legend('hj')) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
levels(rayos.2$elev_cat)
ggplot(rayos_veg_elev, aes(x=factor(veg9), y=Número)) + xlab('Tipo de vegetación') + ylab('Número de incendios') + geom_bar(stat='identity')
ggplot(rayos_veg_elev, aes(x=elev_cat, y=Número)) + xlab('Elevación') + ylab('Número de incendios') + geom_bar(stat='identity') + guides(fill=guide_legend('hj')) + theme(axis.text.x = element_text(angle = 60, hjust = 1))
ggplot(rayos_veg_elev, aes(x=elev_cat, y=Número)) + xlab('Elevación') + ylab('Número de incendios') + geom_bar(stat='identity') + guides(fill=guide_legend('hj')) + theme(axis.text.x = element_text(angle = 50, hjust = 1))
ggplot(rayos_veg_elev, aes(x=elev_cat, y=Número)) + xlab('Elevación') + ylab('Número de incendios') + geom_bar(stat='identity') + guides(fill=guide_legend('hj')) + theme(axis.text.x = element_text(angle = 40, hjust = 1))
ggplot(rayos_veg_elev, aes(x=elev_cat, y=Número)) + xlab('Elevación') + ylab('Número de incendios') + geom_bar(stat='identity') + guides(fill=guide_legend('hj')) + theme(axis.text.x = element_text(angle = 30, hjust = 1))
ggplot(rayos_veg_elev, aes(x=elev_cat, y=Número)) + xlab('Elevación') + ylab('Número de incendios') + geom_bar(stat='identity') + guides(fill=guide_legend('hj')) + theme(axis.text.x = element_text(angle = 20, hjust = 1))
ggplot(rayos_veg_elev, aes(x=elev_cat, y=Número)) + xlab('Elevación') + ylab('Número de incendios') + geom_bar(stat='identity') + guides(fill=guide_legend('hj')) + theme(axis.text.x = element_text(angle = 10, hjust = 1))
ggplot(rayos_veg_elev, aes(x=elev_cat, y=Número)) + xlab('Elevación') + ylab('Número de incendios') + geom_bar(stat='identity') + guides(fill=guide_legend('hj')) + theme(axis.text.x = element_text(angle = 25, hjust = 1))
setwd("~/Dropbox/ITAM_Dropbox/Métodos Analíticos/Examen_2_Git")
library("ROAuth")
library("twitteR")
library("wordcloud")
library("tm")
library("httr")
setup_twitter_oauth('GPI5CNx6tabl6J1M24lQJmCkU', 'YxmKTz1t4uLWSQDKu1h3p0l1g6zSf6PWLPVaAn1ppao23a8ZDY', '867rldhPYu5C17xEzoVMADKNyefqgw1teg0VduH14TVi53315-','Db9volDQ7i0VEjJ85hMHqTQ9nIL1o2w37OJkjAcG1khHz')
setup_twitter_oauth('GPI5CNx6tabl6J1M24lQJmCkU', 'YxmKTz1t4uLWSQDKu1h3p0l1g6zSf6PWLPVaAn1ppao23a8ZDY', '867rldhPYu5C17xEzoVMADKNyefqgw1teg0VduH14TVi53315-','Db9volDQ7i0VEjJ85hMHqTQ9nIL1o2w37OJkjAcG1khHz')
install.packages('twitteR')
install.packages("twitteR")
library("ROAuth")
library("twitteR")
library("wordcloud")
library("tm")
library("httr")
setup_twitter_oauth('GPI5CNx6tabl6J1M24lQJmCkU', 'YxmKTz1t4uLWSQDKu1h3p0l1g6zSf6PWLPVaAn1ppao23a8ZDY', '867rldhPYu5C17xEzoVMADKNyefqgw1teg0VduH14TVi53315-','Db9volDQ7i0VEjJ85hMHqTQ9nIL1o2w37OJkjAcG1khHz')
?setup_twitter_oauth
setup_twitter_oauth('GPI5CNx6tabl6J1M24lQJmCkU', 'YxmKTz1t4uLWSQDKu1h3p0l1g6zSf6PWLPVaAn1ppao23a8ZDY', '86753315-rldhPYu5C17xEzoVMADKNyefqgw1teg0VduH14TVi','Db9volDQ7i0VEjJ85hMHqTQ9nIL1o2w37OJkjAcG1khHz')
twitts <- searchTwitter("#Birdman", n=40)
?getUser
MB <- getUser('mario_becerra')
MB
MB$lang
MB$favoritesCount
MB$created
MB$verified
MB$location
MB$profileImageUrl
MB$getFollowers
MB$getFollowers()
MB_foll <- MB$getFollowers()
users <- read.table('users.txt', header=T)
setwd("~/Dropbox/ITAM_Dropbox/Métodos Analíticos/Examen_2_Git")
users <- read.table('users.txt', header=T)
setwd("~/Dropbox/ITAM_Dropbox/Métodos Analíticos/Examen_2_Git/CrearRed")
users <- read.table('users.txt', header=T)
users
MB <- getUser(users[1])
MB <- getUse(users[1])
MB <- getUser(users[1])
MB <- getUser(character(users[1]))
character(users[1])
as.character(users[1])
users[1]
users[2]
names(users)
dim(users)
as.data.frame(users)
as.data.frame(users)[1,]
as.data.frame(users)[1]
MB <- getUser(character(users[1,]))
MB <- getUser(character(users[1,1]))
users[1,1]
as.character(users[1,1])
MB <- getUser(as.character(users[1,1]))
MB
users_list <- lapply(users, function(i) getUser(as.character(i)))
users_list <- lapply(users, function(i) {getUser(as.character(i))})
users_list <- lapply(users, function(i) {getUser(as.character(i,1))})
MB <- getUser(as.character(users[1,1]))
users_list <- lapply(1:nrow(users), function(i) {getUser(as.character(users[i,1]))})
users_list
getFollowers(MB)
users_list[[1]]$getFollowers()
length(users_list)
followers_list <- lapply(1:length(users_list), function(i) {users_list[[i]]$getFollowers()})
library("parallel")
?mcapply
?mclapply
getOption("mc.cores", 2L)
users <- read.table('users.txt', header=T)
users_list <- mclapply(1:nrow(users), function(i) {getUser(as.character(users[i,1]))}, mc.cores=nc)
nc=getOption("mc.cores", 2L)
users_list <- mclapply(1:nrow(users), function(i) {getUser(as.character(users[i,1]))}, mc.cores=nc)
users_list
users_list <- mclapply(1:nrow(users), function(i) {getUser(as.character(users[i,1]))}, mc.cores=nc)
users_list
followers_list <- lapply(1:2, function(i) {users_list[[i]]$getFollowers()}, mc.cores=nc)
followers_list <- mclapply(1:2, function(i) {users_list[[i]]$getFollowers()}, mc.cores=nc)
followers_list[[1]][1:10]
followees_list <- mclapply(1:2, function(i) {users_list[[i]]$getFriends()}, mc.cores=nc)
followees_list[[1]][1:10]
followees_list
?matrix
?SparseMatrix
?parseMatrix
library(matrix)
library(Matrix)
?SparseMatrix
?sparseMatrix
sparseMatrix(i=c(1,2,3,4), j=(5,6,7,8), dims=c(10,10))
sparseMatrix(i=c(1,2,3,4), j=c(5,6,7,8), dims=c(10,10))
sparseMatrix(i=c(1,2,3,4), j=c(5,6,7,8), dims=c(10,10), dimnames=c('a', 'b'))
sparseMatrix(i=c(1,2,3,4), j=c(5,6,7,8), dims=c(5,5), dimnames=c('a', 'b', 'c', 'd', 'e'))
sparseMatrix(i=c(1,2,3,4), j=c(5,6,7,8), dims=c(5,5), dimnames=c(11,12))
unique(unlist(followers_list))
unlist(followers_list)
length(unlist(followers_list))
length(unique(unlist(followers_list)))
length(unique(unlist(followees_list)))
length((unlist(followees_list)))
as.vector(followers_list)
?unlis
?unlist
as.data.frame(followers_list)
as.vector(unlist(followers_list))
class(as.vector(unlist(followers_list)))
?as.vector
class(as.vector(unlist(followers_list), mode='list'))
sapply(followers_list, '[[')
sapply(followers_list, '[[',3)
is.vector(followers_list)
as.matrix(followers_list)
matrix(followers_list)
followers_list
as.data.frame(followers_list)
data.frame(followers_list)
data.frame(unlist(followers_list))
unlist(followers_list)
followers_list
names(followers_list)
sapply(followers_list, names)
unlist(sapply(followers_list, names))
unique(unlist(sapply(followers_list, names)))
?get_user
?getUser
getUser('183491684')
getUser('183491684')$id
users_list
id_list <- mcsapply(1:nrow(users), function(i) {getUser(as.character(users[i,1]))$id}, mc.cores=nc)
id_list <- mclapply(1:nrow(users), function(i) {getUser(as.character(users[i,1]))$id}, mc.cores=nc)
id_list <- mclapply(1:nrow(users), function(i) {getUser(as.character(users[i,1]))$id}, mc.cores=nc)
id_list
id_list[[1:8]]
sapply(1:8,id_list[[i]])
sapply(1:8, function(i) id_list[[i]])
users$id <- sapply(1:8, function(i) id_list[[i]])
users
?write.csv
write.csv(users, file='users_prueba.csv', rownames=FALSE)
write.csv(users, file='users_prueba.csv', row.names=FALSE)
users <- read.csv('users_prueba.csv')
users
followees_id <- unique(unlist(sapply(followees_list, names)))
followees_id
followers_list
followers_id
followers_id <- unique(unlist(sapply(followers_list, names)))
followers_id
users$id
?read.csv
class(users$id)
users <- read.csv('users_prueba.csv', colClasses = c('factor', 'character'))
users
sapply(users, class)
class(users$id)
users$id
rbind(t(users$id), followers_id)
cbind(t(users$id), followers_id)
dim(followers_id)
c(t(users$id), followers_id)
followers_id
users_id <- c(t(users$id), followers_id, followees_id)
users_id <- unique(c(t(users$id), followers_id, followees_id))
users_id
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
list.of.packages <- c("twitteR", "parallel")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
new.packages
if(length(new.packages)) install.packages(new.packages)
list.of.packages <- c("twitteR", "parallel", "bfkd")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
new.packages
if(length(new.packages)) install.packages(new.packages)
mclapply(1:2, function(i) {users_list[[i]]$getFollowers()$id}, mc.cores=nc)
mclapply(1:2, function(i) {users_list[[i]]$getFollowersIDs()}, mc.cores=nc)
mclapply(1:2, function(i) {users_list[[i]]$getFollowersIDs()}, mc.cores=nc)
mclapply(1:2, function(i) {users_list[[i]]$getFollowerIDs()}, mc.cores=nc)
unlist(mclapply(1:2, function(i) {users_list[[i]]$getFollowerIDs()}, mc.cores=nc))
followees_id_list <- mclapply(1:2, function(i) {users_list[[i]]$getFriendIDs()}, mc.cores=nc)
followees_id_list
followees_id_list[1]
followees_id_list[[1]]
cbind(1, followees_list[[1]])
cbind(users$id[1], followees_list[[1]])
cbind(rep(users$id[1], length(followees_list[[1]])), followees_list[[1]])
rep(users$id[1], length(followees_list[[1]]))
c(rep(users$id[1], length(followees_list[[1]])),followees_list[[1]]))
c(rep(users$id[1], length(followees_list[[1]])),followees_list[[1]])
rbind(rep(users$id[1], length(followees_list[[1]])), followees_list[[1]])
cbind(rep(users$id[1], length(followees_list[[1]])), followees_list[[1]])
rep(users$id[1], length(followees_list[[1]]))
followees_list[[1]]
rep(users$id[1], length(followees_id_list[[1]]))
cbind(rep(users$id[1], length(followees_list[[1]])), followees_id_list[[1]])
cbind(users$id[1], followees_id_list[[1]])
cbind(followers_id_list[[1]], users$id[1])
followers_id_list <- mclapply(1:2, function(i) {users_list[[i]]$getFollowerIDs()}, mc.cores=nc)
cbind(followers_id_list[[1]], users$id[1])
rbind(followers_id <- unique(unlist(sapply(followers_list, names))),
followees_id <- unique(unlist(sapply(followees_list, names))))
cbind(followers_id <- unique(unlist(sapply(followers_list, names))),
followees_id <- unique(unlist(sapply(followees_list, names))))
followers_id <- unique(unlist(sapply(followers_list, names)))
followers_id
rbind(
cbind(users$id[1], followees_id_list[[1]]),
cbind(followers_id_list[[1]], users$id[1]))
adj <- rbind(
cbind(users$id[1], followees_id_list[[1]]),
cbind(followers_id_list[[1]], users$id[1]))
adj[1,]
adj[,1]
sparseMatrix(i=adj[,1], j=adj[,2])
?sparseMatrix
integer(adj[,1])
as.numeric(adj[,1])
sparseMatrix(i=as.numeric(adj[,1]), j=as.numeric(adj[,2]))
as.numeric(adj[,1])
as.numeric(adj)
dim(as.numeric(adj))
?as.int
?as.integer
as.numeric(adj[,1])
as.integer(adj[,1])
sparseMatrix(as.integer(adj[,1]), as.integer(adj[,2]))
getUser(82773214)
getUser(82773214)$getFollowerIDs()
mclapply(1:2, function(i) {getUser(user$id[i])$getFollowerIDs()}, mc.cores=nc)
mclapply(1:2, function(i) {getUser(user$id[i])$getFollowerIDs()}, mc.cores=nc)
mclapply(1:2, function(i) {getUser(user$id[i])$getFollowerIDs()}, mc.cores=nc)
mclapply(1:2, function(i) {getUser(user$id[i])$getFollowerIDs()}, mc.cores=nc)
i=1
user$id[i]
users$id[i]
mclapply(1:2, function(i) {getUser(users$id[i])$getFollowerIDs()}, mc.cores=nc)
getUser(users$id[i])
getUser(users$id[i])$getFollowerIDs()
mclapply(1:2, function(i) {getUser(users$id[i])$getFollowerIDs()}, mc.cores=nc)
mclapply(1:2, function(i) {getUser(users$id[i])$getFollowerIDs()}, mc.cores=nc)
followees_id_list <- mclapply(1:2, function(i) {getUser(users$id[i])$getFriendIDs()}, mc.cores=nc)
followers_id_list <- mclapply(1:2, function(i) {getUser(users$id[i])$getFollowerIDs()}, mc.cores=nc)
followees_id_list
mclapply(users$id[1:2], function(i) {getUser(i)$getFollowerIDs()}, mc.cores=nc)
users$id[1:2]
mclapply(users$id[1:2], function(i) {getUser(i)$getFollowerIDs()}, mc.cores=nc)
followers_id_list <- mclapply(users$id[1:2], function(i) {getUser(i)$getFollowerIDs()}, mc.cores=nc)
followers_id_list <- mclapply(users$id[1:2], function(i) {getUser(i)$getFollowerIDs()}, mc.cores=nc)
followers_id_list <- mclapply(users$id[1:2], function(i) {getUser(i)$getFollowerIDs()}, mc.cores=nc)
mclapply(users$id[1:2], function(i) {getUser(i)$getFollowerIDs()}, mc.cores=nc)
followers_id_list <- mclapply(users$id[1:2], function(i) {getUser(i)$getFollowerIDs()}, mc.cores=nc)
mclapply(1:2, function(i) {getUser(users$id[i])$getFollowerIDs()}, mc.cores=nc)
mclapply(1:2, function(i) {getUser(users$id[i])$getFollowerIDs()}, mc.cores=nc)
mclapply(1:2, function(i) {getUser(users$id[i])$getFollowerIDs()}, mc.cores=nc)
mclapply(1:2, function(i) {getUser(users$id[i])$getFollowerIDs()}, mc.cores=nc)
mclapply(1:2, function(i) {getUser(users$id[i])$getFollowerIDs()}, mc.cores=nc)
followers_id_list <- mclapply(users$id[1:2], function(i) {getUser(i)$getFollowerIDs()}, mc.cores=nc)
list.of.packages <- c("twitteR", "parallel")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(list.of.packages)
apply(list.of.packages, library)
apply(list.of.packages, library())
?apply
apply(list.of.packages, 1, library)
apply(list.of.packages, 2, library)
apply(list.of.packages, 2, require)
sapply(list.of.packages, require)
require(list.of.packages)
followers_id_list <- mclapply(users$id[1:2], function(i) {getUser(i)$getFollowerIDs()}, mc.cores=nc)
apply(list.of.packages, 1, require)
lapply(list.of.packages, require, character.only=T)
followers_id_list <- mclapply(users$id[1:2], function(i) {getUser(i)$getFollowerIDs()}, mc.cores=nc)
getUser(82773214)$getFollowerIDs()
setup_twitter_oauth('GPI5CNx6tabl6J1M24lQJmCkU', 'YxmKTz1t4uLWSQDKu1h3p0l1g6zSf6PWLPVaAn1ppao23a8ZDY', '86753315-rldhPYu5C17xEzoVMADKNyefqgw1teg0VduH14TVi','Db9volDQ7i0VEjJ85hMHqTQ9nIL1o2w37OJkjAcG1khHz')
getUser(82773214)$getFollowerIDs()
followers_id_list <- mclapply(users$id[1:2], function(i) {getUser(i)$getFollowerIDs()}, mc.cores=nc)
users$id[1:2]
i='86753315'
getUser(i)$getFollowerIDs()
mclapply(users$id[1:2], function(i) {getUser(i)$getFollowerIDs()}, mc.cores=nc)
followers_id_list <- mclapply(users$id[1:2], function(i) {getUser(i)$getFollowerIDs()}, mc.cores=nc)
followees_id_list <- mclapply(users$id[1:2], function(i) {getUser(i)$getFriendIDs()}, mc.cores=nc)
followers_id_list
names(followers_id_list) <- users$id[1:2]
followers_id_list
users <- users_c[1:2,]
users_c <- read.csv('users_prueba.csv', colClasses = c('factor', 'character'))
users <- users_c[1:2,]
users
names(followees_id_list) <- users$id
followees_id_list
unlist(followees_id_list)
unique(unlist(followees_id_list))
c(unlist(followees_id_list), unlist(followers_id_list))
unique(c(unlist(followees_id_list), unlist(followers_id_list)))
library(dplyr)
users$id %>% not in unique(c(unlist(followees_id_list), unlist(followers_id_list)))
temp <- unique(c(unlist(followees_id_list), unlist(followers_id_list)))
which(temp !in users$id)
?in
setdiff(temp, users$id)
temp <- unique(c(unlist(followees_id_list), unlist(followers_id_list)))
new_users <- setdiff(temp, users$id)
new_users
new_ids <- setdiff(temp, users$id)
?mcapply
?mclapply
followers_id_list <- mclapply(users$id, function(i) {getUser(i)$getFollowerIDs()}, mc.cores=nc, USE.NAMES=TRUE)
followers_id_list <- mclapply(users$id, function(i) {getUser(i)$getFollowerIDs()}, mc.cores=nc, USE.NAMES=TRUE)
followers_id_list <- mclapply(users$id, function(i) {getUser(i)$getFollowerIDs()}, mc.cores=nc, USE.NAMES=TRUE)
followers_id_list <- mclapply(users$id, function(i) {getUser(i)$getFollowerIDs()}, mc.cores=nc, USE.NAMES=TRUE)
?lapply
?rbindlist
library(data.table)
?rbindlist
rbindlist(followees_id_list)
followees_id_list
?append
new_ids <- new_ids[1:2]
new_ids
followers_id_list2 <- mclapply(new_ids, function(i) {getUser(i)$getFollowerIDs()}, mc.cores=nc)
followers_id_list2 <- mclapply(new_ids, function(i) {getUser(i)$getFollowerIDs()}, mc.cores=nc)
names(followers_id_list2) <- new_ids
followers_id_list2
new_ids
getUser(273375532)
getUser(273375532)
getUser(273375532)
followees_id_list2 <- mclapply(new_ids, function(i) {getUser(i)$getFriendIDs()}, mc.cores=nc)
followees_id_list2
append(followers_id_list, followers_id_list2)
temp<- append(followers_id_list, followers_id_list2)
length(temp)
length(followers_id_list)
length(followers_id_list2)
k=0
k+
+
temp<-0
temp<- append(followers, followers2)
followers <- followers_id_list
followees <- followees_id_list
followers2 <- followers_id_list2
followers1 <- followers
followers <- followers1
followees <- followees1
followees ->followees1
followees <- followees1
temp <- unique(c(unlist(followees1), unlist(followers1)))
temp
k=0
while(k<3) {
k=k+1
followers2 <- mclapply(new_ids, function(i) {getUser(i)$getFollowerIDs()}, mc.cores=nc)
names(followers2) <- new_ids
followees2 <- mclapply(new_ids, function(i) {getUser(i)$getFriendIDs()}, mc.cores=nc)
names(followees2) <- new_ids
followers <- append(followers, followers2)
followees <- append(followees, followees2)
temp <- unique(c(unlist(followees), unlist(followers)))
new_ids <- setdiff(temp, users_seed$id)
#new_ids <- new_ids[1:2]
}
users_seed <- users_c[1:2,]
k=0
while(k<3) {
k=k+1
followers2 <- mclapply(new_ids, function(i) {getUser(i)$getFollowerIDs()}, mc.cores=nc)
names(followers2) <- new_ids
followees2 <- mclapply(new_ids, function(i) {getUser(i)$getFriendIDs()}, mc.cores=nc)
names(followees2) <- new_ids
followers <- append(followers, followers2)
followees <- append(followees, followees2)
temp <- unique(c(unlist(followees), unlist(followers)))
new_ids <- setdiff(temp, users_seed$id)
#new_ids <- new_ids[1:2]
}
followers
length(followers)
length(followees)
length(followees2)
length(followers2)
list.of.packages <- c("twitteR", "parallel", "methods")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, require, character.only=T)
